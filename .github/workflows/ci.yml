name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7.4
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq:4.1-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      elastic:
        image: elasticsearch:8.17.3
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: "false"
        options: >-
          --health-cmd "bash -c 'curl -s http://localhost:9200 >/dev/null'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 12
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore (all .csproj)
        shell: bash
        run: |
          set -e
          find src -name '*.csproj' -print0 | xargs -0 -n1 dotnet restore
          find tests -name '*.csproj' -print0 | xargs -0 -n1 dotnet restore

      - name: Build (Release)
        shell: bash
        run: |
          set -e
          dotnet build src/PlainBridge.AppHost/PlainBridge.AppHost.csproj -c Release --no-restore
          dotnet build src/PlainBridge.Api/PlainBridge.Api.ApiEndPoint/PlainBridge.Api.ApiEndPoint.csproj -c Release --no-restore
          dotnet build src/PlainBridge.Server/PlainBridge.Server.ApiEndPoint/PlainBridge.Server.ApiEndPoint.csproj -c Release --no-restore
          dotnet build src/PlainBridge.Client/PlainBridge.Client.ApiEndPoint/PlainBridge.Client.ApiEndPoint.csproj -c Release --no-restore
          dotnet build src/PlainBridge.IdentityServer/PlainBridge.IdentityServer.EndPoint/PlainBridge.IdentityServer.EndPoint.csproj -c Release --no-restore

      - name: Test
        shell: bash
        env:
          ConnectionStrings__cache: "localhost:6379"
          ConnectionStrings__messaging: "amqp://guest:guest@localhost:5672"
          ConnectionStrings__elasticsearch: "http://localhost:9200"
        run: |
          set -e
          for proj in $(find tests -name '*.csproj' -type f); do
            echo "Running tests for $proj"
            dotnet test "$proj" -c Release --no-build --logger trx
          done

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/*.trx
